<UserControl x:Class="DiamondRoom.Views.ReservationRoomsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DiamondRoom.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:localConverter="clr-namespace:DiamondRoom.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920">
    <Grid>
        <Grid.Background>
            <LinearGradientBrush StartPoint="1, 0.99" EndPoint="0.5, 0.55">
                <GradientStop Color="#e3e3e3" Offset="1"></GradientStop>
                <GradientStop Color="#E9967A" Offset="0"></GradientStop>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="1300"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="100"/>

        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1" Grid.Column="1">
            <DataGrid Name="featuresGrid"  AutoGenerateColumns="False" Height="880" Margin="0,15,0,0"
                  ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding Reservations}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="First Name" Binding="{Binding firstName}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Last Name" Binding="{Binding lastName}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Room(NR)" Binding="{Binding roomNumber}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Room Type" Binding="{Binding roomType}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="From" Binding="{Binding dateFrom}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="To" Binding="{Binding dateTo}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Status" Binding="{Binding status}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Observations" Binding="{Binding observations}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Total (Lei)" Binding="{Binding total}" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Top">
            <!--<StackPanel.Resources>
                <localConverter:ReservationsCustomConverter x:Key="reservationsCustomConverter"/>
            </StackPanel.Resources>-->
            <WrapPanel>

                <Button Content="Modifica statusul rezervarii" Margin="15" Width="280" Height="30" Command="{Binding UpdateCommand}" 
                    CommandParameter="{Binding ElementName=featuresGrid, Path=SelectedItem}" />
                



            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">FirstName: </Label>
                <TextBox Name="txtFirstName" Width="200" HorizontalAlignment="Left" IsReadOnly="True"
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.firstName, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">LastName:</Label>
                <TextBox Name="txtLastName" Width="200" HorizontalAlignment="Left" IsReadOnly="True"
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.lastName, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">Room(NR): </Label>
                <TextBox Name="txtRoom" Width="200" HorizontalAlignment="Left" IsReadOnly="True"
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.roomNumber, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">Room type: </Label>
                <TextBox Name="txtRoomType" Width="200" HorizontalAlignment="Left" IsReadOnly="True"
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.roomType, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">From:</Label>
                <TextBox Name="txtFrom" Width="200" HorizontalAlignment="Left" IsReadOnly="True"
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.dateFrom, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">To: </Label>
                <TextBox Name="txtTo" Width="200" HorizontalAlignment="Left" IsReadOnly="True"
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.dateTo, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">Status:</Label>
                <TextBox Name="txtStatus" Width="200" HorizontalAlignment="Left" 
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.status, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
            <WrapPanel>
                <Label Width="150" FontSize="15">Observations:</Label>
                <TextBox Name="txtObservations" Width="200" HorizontalAlignment="Left" IsReadOnly="True"
                         Text="{Binding ElementName=featuresGrid, Path=SelectedItem.observations, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
            <StackPanel Margin="10">
                <Button Content="Back" Width="Auto" Height="40" Style="{StaticResource MaterialDesignRaisedButton}"
                                materialDesign:ButtonAssist.CornerRadius="10" BorderThickness="2" BorderBrush="Black"
                                Background="Black" Foreground="White" ToolTip="Go back.." Command="{Binding Path = BackCommand}">
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
